<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 引入配置文件,已经由spring配置文件引入  -->
	
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dataSource.diverClassName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${dataSource.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${dataSource.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${dataSource.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${dataSource.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${dataSource.maxWait}"></property>
		<!--  打开PSCache oracle可以设置为true,mysql设为false(因为PSCache基于游标,mysql在某些方面不支持)   -->
		<property name="poolPreparedStatements" value="true" />
		<!--  设置每个PSCache的大小     -->
		<property name="maxPoolPreparedStatementPerConnectionSize" value="100" />
		<!-- 获取链接最大等待时间 -->
		<property name="validationQuery" value="${validationQuery}"></property>
		<property name="testOnBorrow" value="false"></property>
		<property name="testOnReturn" value="false"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
		<property name="minEvictableIdleTimeMillis" value="2520000"></property>
		<property name="removeAbandoned" value="true"></property>
		<property name="removeAbandonedTimeout" value="1800"></property>
		<property name="logAbandoned" value="true"></property>
		<property name="filters" value="stat"></property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/message/mapper/*.xml"></property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.message.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>